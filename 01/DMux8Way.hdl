// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    And(a=in, b=notsel0, out=aand);
    And(a=aand, b=notsel1, out=aand1);
    And(a=aand1, b=notsel2, out=a);

    And(a=in, b=sel[0], out=band);
    And(a=band, b=notsel1, out=band1);
    And(a=band1, b=notsel2, out=b);
    
    And(a=in, b=notsel0, out=cand);
    And(a=cand, b=sel[1], out=cand1);
    And(a=cand1, b=notsel2, out=c);
    
    And(a=in, b=sel[0], out=dand);
    And(a=dand, b=sel[1], out=dand1);
    And(a=dand1, b=notsel2, out=d);
    
    And(a=in, b=notsel0, out=eand);
    And(a=eand, b=notsel1, out=eand1);
    And(a=eand1, b=sel[2], out=e);
    
    And(a=in, b=sel[0], out=fand);
    And(a=fand, b=notsel1, out=fand1);
    And(a=fand1, b=sel[2], out=f);
    
    And(a=in, b=notsel0, out=gand);
    And(a=gand, b=sel[1], out=gand1);
    And(a=gand1, b=sel[2], out=g);
    
    And(a=in, b=sel[0], out=hand);
    And(a=hand, b=sel[1], out=hand1);
    And(a=hand1, b=sel[2], out=h);
}